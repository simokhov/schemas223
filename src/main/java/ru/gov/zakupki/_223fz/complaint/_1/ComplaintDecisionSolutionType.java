//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.23 at 05:17:31 PM MSK 
//


package ru.gov.zakupki._223fz.complaint._1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for complaintDecisionSolutionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="complaintDecisionSolutionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="confirmed"/>
 *     &lt;enumeration value="partly"/>
 *     &lt;enumeration value="unreasonably"/>
 *     &lt;enumeration value="notApplicable"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "complaintDecisionSolutionType")
@XmlEnum
public enum ComplaintDecisionSolutionType {


    /**
     * Признана обоснованной
     * 
     */
    @XmlEnumValue("confirmed")
    CONFIRMED("confirmed"),

    /**
     * Признана обоснованной  (частично)
     * 
     */
    @XmlEnumValue("partly")
    PARTLY("partly"),

    /**
     * Признана необоснованной
     * 
     */
    @XmlEnumValue("unreasonably")
    UNREASONABLY("unreasonably"),

    /**
     * Не относится к компетенции контролирующего органа
     * 
     */
    @XmlEnumValue("notApplicable")
    NOT_APPLICABLE("notApplicable");
    private final String value;

    ComplaintDecisionSolutionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ComplaintDecisionSolutionType fromValue(String v) {
        for (ComplaintDecisionSolutionType c: ComplaintDecisionSolutionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
